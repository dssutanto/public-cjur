{"version":3,"sources":["webpack://gatsby-starter-wordpress-blog/./src/components/bio.js","webpack://gatsby-starter-wordpress-blog/./src/templates/about.js"],"names":["editor","className","src","headshot","mediaItemUrl","alt","parse","givenName","surname","title","join","university","data","page","editors","allFile","editorialBoard","chiefs","otherEditors","ed1","isChief","push","ed2","ed3","ed4","ed5","ed6","ed7","ed8","itemProp","content","length","filter","chief","map","key"],"mappings":"kOAgBA,EAZY,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACb,OACE,uBAAKC,UAAU,UACb,uBAAKA,UAAU,eAAc,uBAAKC,IAAKF,EAAOG,SAASC,aAAcC,IAAI,WAAWJ,UAAU,cAC9F,uBAAKA,UAAU,kBACb,wBAAMA,UAAU,gBAAeK,QAAMN,EAAOO,WAAa,KAAMD,QAAMN,EAAOQ,UAC5E,wBAAMP,UAAU,gBAAgBD,EAAOS,MAAMC,KAAK,MAAlD,MAA4DV,EAAOW,eC6D3E,EA/DkB,SAAC,GAAiC,IAAD,IAA9BC,KAAQC,EAAsB,EAAtBA,KAUnBC,GAVyC,EAAhBC,QAUfF,EAAKG,gBACfC,EAAS,GACTC,EAAe,GAoBrB,OAlBAJ,EAAQK,IAAIC,QAAUH,EAAOI,KAAKP,EAAQK,KAAOD,EAAaG,KAAKP,EAAQK,KAC3EL,EAAQQ,IAAIF,QAAUH,EAAOI,KAAKP,EAAQQ,KAAOJ,EAAaG,KAAKP,EAAQQ,KAC3ER,EAAQS,IAAIH,QAAUH,EAAOI,KAAKP,EAAQS,KAAOL,EAAaG,KAAKP,EAAQS,KAC3ET,EAAQU,IAAIJ,QAAUH,EAAOI,KAAKP,EAAQU,KAAON,EAAaG,KAAKP,EAAQU,KAC3EV,EAAQW,IAAIL,QAAUH,EAAOI,KAAKP,EAAQW,KAAOP,EAAaG,KAAKP,EAAQW,KAC3EX,EAAQY,IAAIN,QAAUH,EAAOI,KAAKP,EAAQY,KAAOR,EAAaG,KAAKP,EAAQY,KAC3EZ,EAAQa,IAAIP,QAAUH,EAAOI,KAAKP,EAAQa,KAAOT,EAAaG,KAAKP,EAAQa,KAC3Eb,EAAQc,IAAIR,QAAUH,EAAOI,KAAKP,EAAQc,KAAOV,EAAaG,KAAKP,EAAQc,KAYvE,gBAAC,IAAD,CAAQnB,MAAM,YACV,8BACI,sBAAIR,UAAU,eAAe4B,SAAS,aAAYvB,QAAMO,EAAKJ,SAEjE,2BAASR,UAAU,iBACVK,QAAMO,EAAKiB,SACfb,EAAOc,OAAS,EACb,uBAAK9B,UAAU,mBACVgB,EAAOe,QAAO,SAACC,GAAD,SAAaA,EAAMzB,SAAayB,EAAM1B,WAAe0B,EAAMtB,YAAgBsB,EAAMxB,UAAsByB,KAAI,SAAAD,GACtH,OACI,gBAAC,EAAD,CAAKjC,OAAQiC,EAAOE,IAAKF,EAAM1B,UAAY0B,EAAMzB,cAK7D,KAEJ,2BACA,uBAAKP,UAAU,mBACViB,EAAac,QAAO,SAAChC,GAAD,SAAcA,EAAOQ,SAAaR,EAAOO,WAAeP,EAAOW,YAAgBX,EAAOS,UAAsByB,KAAI,SAAAlC,GACjI,OACI,gBAAC,EAAD,CAAKA,OAAQA,EAAQmC,IAAKnC,EAAOO,UAAYP,EAAOQ","file":"component---src-templates-about-js-fadb5e59a95594c37750.js","sourcesContent":["import React from \"react\"\r\nimport parse from \"html-react-parser\"\r\n// import { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Bio = ({ editor }) => {\r\n  return (\r\n    <div className=\"editor\">\r\n      <div className=\"img-cropper\"><img src={editor.headshot.mediaItemUrl} alt=\"headshot\" className=\"headshot\" /></div>\r\n      <div className=\"editor-details\">\r\n        <span className=\"editor-name\">{parse(editor.givenName) + ' ' + parse(editor.surname)}</span>\r\n        <span className=\"editor-title\">{editor.title.join(\", \")} | {editor.university}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport parse from \"html-react-parser\"\r\n\r\nimport Layout from \"../components/layout\"\r\n// import Seo from \"../components/seo\"\r\nimport Bio from \"../components/bio\"\r\n\r\nconst AboutPage = ({ data: { page, allFile } }) => {\r\n    // const files = allFile.nodes\r\n    // function findFile(url) {\r\n    //   let link\r\n    //   files.forEach((file) => {\r\n    //     if (file.publicURL.split(\"/\").at(-1) === url.split(\"/\").at(-1)) link = file.publicURL\r\n    //   })\r\n    //   return link\r\n    // }\r\n\r\n    const editors = page.editorialBoard\r\n    const chiefs = []\r\n    const otherEditors = []\r\n\r\n    editors.ed1.isChief ? chiefs.push(editors.ed1) : otherEditors.push(editors.ed1)\r\n    editors.ed2.isChief ? chiefs.push(editors.ed2) : otherEditors.push(editors.ed2)\r\n    editors.ed3.isChief ? chiefs.push(editors.ed3) : otherEditors.push(editors.ed3)\r\n    editors.ed4.isChief ? chiefs.push(editors.ed4) : otherEditors.push(editors.ed4)\r\n    editors.ed5.isChief ? chiefs.push(editors.ed5) : otherEditors.push(editors.ed5)\r\n    editors.ed6.isChief ? chiefs.push(editors.ed6) : otherEditors.push(editors.ed6)\r\n    editors.ed7.isChief ? chiefs.push(editors.ed7) : otherEditors.push(editors.ed7)\r\n    editors.ed8.isChief ? chiefs.push(editors.ed8) : otherEditors.push(editors.ed8)\r\n\r\n    // chiefs.forEach((editor) => {\r\n    //     editor.head = findFile(editor.headshot.mediaItemUrl)\r\n    // })\r\n    // otherEditors.forEach((editor) => {\r\n    //     editor.head = findFile(editor.headshot.mediaItemUrl)\r\n    // })\r\n\r\n    // Sort both arrays alphabetically by surname\r\n\r\n    return (\r\n        <Layout title=\"About us\">\r\n            <header>\r\n                <h1 className=\"main-heading\" itemProp=\"headline\">{parse(page.title)}</h1>\r\n            </header>\r\n            <article className=\"default-page\">\r\n                    {parse(page.content)}\r\n                {chiefs.length > 0 ?\r\n                    <div className=\"editorial-board\">\r\n                        {chiefs.filter((chief) => !!chief.surname && !!chief.givenName && !!chief.university && !!chief.title ? true : false).map(chief => {\r\n                            return (\r\n                                <Bio editor={chief} key={chief.givenName + chief.surname}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                <hr />\r\n                <div className=\"editorial-board\">\r\n                    {otherEditors.filter((editor) => !!editor.surname && !!editor.givenName && !!editor.university && !!editor.title ? true : false).map(editor => {\r\n                        return (\r\n                            <Bio editor={editor} key={editor.givenName + editor.surname} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </article>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AboutPage\r\n\r\nexport const aboutQuery = graphql`\r\nquery AboutPage(\r\n    $id: String!\r\n  ) {\r\n    page: wpPage(id: { eq: $id }) {\r\n        id\r\n        title\r\n        content\r\n        editorialBoard {\r\n            ed1 {\r\n                headshot {\r\n                    mediaItemUrl\r\n                  }\r\n                givenName\r\n                surname\r\n                university\r\n                title\r\n                isChief\r\n            }\r\n            ed2 {\r\n                headshot {\r\n                    mediaItemUrl\r\n                  }\r\n                givenName\r\n                surname\r\n                university\r\n                title\r\n                isChief\r\n            }\r\n            ed3 {\r\n                headshot {\r\n                    mediaItemUrl\r\n                  }\r\n                givenName\r\n                surname\r\n                university\r\n                title\r\n                isChief\r\n            }\r\n            ed4 {\r\n                headshot {\r\n                    mediaItemUrl\r\n                  }\r\n                givenName\r\n                surname\r\n                university\r\n                title\r\n                isChief\r\n            }\r\n            ed5 {\r\n                headshot {\r\n                    mediaItemUrl\r\n                  }\r\n                givenName\r\n                surname\r\n                university\r\n                title\r\n                isChief\r\n            }\r\n            ed6 {\r\n                headshot {\r\n                    mediaItemUrl\r\n                  }\r\n                givenName\r\n                surname\r\n                university\r\n                title\r\n                isChief\r\n            }\r\n            ed7 {\r\n                headshot {\r\n                    mediaItemUrl\r\n                  }\r\n                givenName\r\n                surname\r\n                university\r\n                title\r\n                isChief\r\n            }\r\n            ed8 {\r\n                headshot {\r\n                    mediaItemUrl\r\n                  }\r\n                givenName\r\n                surname\r\n                university\r\n                title\r\n                isChief\r\n            }\r\n        }\r\n    }\r\n    allFile {\r\n        nodes {\r\n          publicURL\r\n        }\r\n    }\r\n}\r\n`\r\n"],"sourceRoot":""}